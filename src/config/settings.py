"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path

import environ


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Initialise 'env' pour gérer les variables d'environnement, avec DEBUG par défaut à True.
env = environ.Env(
    DEBUG=(bool, True)
)

# Définit le chemin vers le fichier .env dans le répertoire parent de BASE_DIR.
env_path = BASE_DIR.parent / '.env'

# Charge les variables d'environnement depuis le fichier .env.
environ.Env.read_env(env_path)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env("DJANGO_SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'allauth',
    'allauth.account',
    'users',
]

AUTHENTICATION_BACKENDS = [
    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',

    # `allauth` specific authentication methods, such as login by email
    'allauth.account.auth_backends.AuthenticationBackend',
]


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'allauth.account.middleware.AccountMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            BASE_DIR / "templates"
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'fr-FR'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    BASE_DIR / "static",
]
STATIC_ROOT = BASE_DIR / "staticfiles"  # Utilisé avec 'collectstatic' en production

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
AUTH_USER_MODEL = 'users.CustomUser'

# Config media
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Configuration d'Allauth pour utiliser l'email comme identifiant principal
ACCOUNT_USER_MODEL_USERNAME_FIELD = None  # Désactive le champ username
ACCOUNT_AUTHENTICATION_METHOD = "email"  # Utiliser uniquement l'email pour l'authentification
ACCOUNT_EMAIL_REQUIRED = True  # Exiger l'email pour l'inscription
ACCOUNT_USERNAME_REQUIRED = False  # Désactiver le champ username
ACCOUNT_EMAIL_VERIFICATION = "mandatory"  # Activer la vérification d'email

# Configurations supplémentaires pour Allauth
ACCOUNT_LOGIN_ATTEMPTS_LIMIT = 5  # Limite le nombre de tentatives de connexion
ACCOUNT_LOGIN_ATTEMPTS_TIMEOUT = 300  # Délai d'attente en secondes après trop de tentatives
ACCOUNT_LOGOUT_ON_GET = False  # Désactive la déconnexion par GET, nécessite une requête POST avec CSRF
ACCOUNT_LOGIN_ON_EMAIL_CONFIRMATION = True  # Connexion automatique après confirmation d'email
ACCOUNT_EMAIL_CONFIRMATION_EXPIRE_DAYS = 3  # Durée de validité du lien de confirmation
ACCOUNT_EMAIL_CONFIRMATION_COOLDOWN = 180  # Délai minimum entre deux envois de confirmation

# email console
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# site_id
SITE_ID = 1

